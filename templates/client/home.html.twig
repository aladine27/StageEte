{% extends 'base.html.twig' %}

{% block body %}
    <style><!-- Inclusion des fichiers CSS de Bootstrap -->
   <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
        /* Styles pour la barre de navigation */
        .navbar {
            color: #888;
            height: 50px;
            position: fixed; /* Pour positionner la navbar en haut de la page */
            top: 0; /* Pour définir la position verticale en haut de la page */
            left: 0; /* Pour définir la position horizontale à gauche de la page */
            width: 100%; /* Pour occuper toute la largeur de la page */
            background-color: #888; /* Couleur gris pour la navbar */
          
        }

        /* Styles pour le logo "Portail Sonede" */
        .navbar-brand {
            font-size: 20px;
            background-color: #0971ce;
            font-weight: 500;
            height: 40px;
            display: flex; /* Pour utiliser le modèle de boîte flexible */
            align-items: center; /* Pour centrer verticalement le logo */
            padding: 0 10px;
            color: #fff;
            top: 0; /* Pour définir la position verticale en haut de la page */
            left: 0;
        }

        /* Styles pour le bouton de déconnexion */
        .logout-button {
            color: #0971ce;
            height: 40px;
            float: right;
            font-size: 20px;
            line-height: 40px;
            padding-right: 10px;
            cursor: pointer;
        }

        /* Styles pour la barre de navigation horizontale */
        .navbar-horizontal {
            color: #0971ce;
            display: flex;
            justify-content: space-between;
            align-items: center; /* Pour centrer verticalement le logo et le bouton de déconnexion */
            padding: 10px 20px; /* Pour ajouter de l'espace autour des liens */
        }

        /* Styles pour les liens de navigation dans la barre horizontale */
        .navbar-horizontal a {
            color: black;
            text-decoration: none;
            margin-right: 10px; /* Pour ajouter un espace entre les liens */
        }

        /* Styles pour la barre latérale */
        .sidebar {
            background-color: #0971ce;
            color: white;
            width: 50px;
            height: 60vh;
            padding-top: 20px;
        }

        /* Styles pour le contenu */
        .content {
        padding:10px;
        display:flex;
        flex-direction:row;
        justify-content:space-evenly;
        gap:20px;
        background:white;
        border-radius:12px;
        width:100%;
        
        }
        body {
            background-image: url('/images/body.png');
            background-repeat: no-repeat;
            background-size: cover;
        }
        .card {
            border: 1px solid #ccc;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 26px;
            margin: 26px;
            max-width: 400px;
            width: 200%;
            background-color: #fff;
            position: absolute;
            bottom: 100px;
        }

        .card-title {
            font-size: 18px;
            font-weight: bold;
            margin-bottom: 8px;
        }

        .card-text {
            margin-bottom: 4px;
            font-weight:600;
            color:black;

        }

        .btn-modifier-compte {
            margin-top:15px;
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 4px;
            padding: 8px 16px;
            text-decoration: none;
        }

        .btn-modifier-compte:hover {
            background-color: #0056b3;
        }
        .content-text{
            display:flex;
            flex-direction:column;
            gap:10px;


            }
            .content-number{
            color: #0056b3;

            }
        
        /* Styles pour le bouton "Prestation" */
        .btn-prestation {
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 4px;
            padding: 8px 16px;
            text-decoration: none;
        }

        .btn-prestation:hover {
            background-color: #0056b3;
        }
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        
  .table {
            margin-left: 20px; /* Add some margin to create space between the content and the right side */
        }
    
         
    .content-item{
         display:flex;
        flex-direction:row;
        justify-content:flex-start;
        gap:10px;
    }
    .content-image{
        width:60px;
        height:60px;
        background-color:green;
        display:flex;
        justify-content:center;
        align-items:center;
    }
    .navbar{
        padding-top:0px;
    }
    .table {
            margin-left: 20px;
        }
    .recherche_input{
         border-top-left-radius: 15px;
		border-bottom-left-radius: 15px;
         border:1px solid blue;
         margin-bottom:15px;
         margin-top:15px;
    }
    .recherche_button{
      border-top-right-radius: 15px;
		border-bottom-right-radius: 15px;
      background-color:#007bff;
      color:white;
    }
    </style>




<div class="navbar">
    <div class="navbar-brand">Portail SONEDE</div>
    {% if app.user %}
        <a href="{{ path('logout') }}">
            <svg fill="#0056b3" width="40px" height="40px" viewBox="0 0 32 32" version="1.1" xmlns="http://www.w3.org/2000/svg">
                <title>logout</title>
                <path d="M0 9.875v12.219c0 1.125 0.469 2.125 1.219 2.906 0.75 0.75 1.719 1.156 2.844 1.156h6.125v-2.531h-6.125c-0.844 0-1.5-0.688-1.5-1.531v-12.219c0-0.844 0.656-1.5 1.5-1.5h6.125v-2.563h-6.125c-1.125 0-2.094 0.438-2.844 1.188-0.75 0.781-1.219 1.75-1.219 2.875zM6.719 13.563v4.875c0 0.563 0.5 1.031 1.063 1.031h5.656v3.844c0 0.344 0.188 0.625 0.5 0.781 0.125 0.031 0.25 0.031 0.313 0.031 0.219 0 0.406-0.063 0.563-0.219l7.344-7.344c0.344-0.281 0.313-0.844 0-1.156l-7.344-7.313c-0.438-0.469-1.375-0.188-1.375 0.563v3.875h-5.656c-0.563 0-1.063 0.469-1.063 1.031z"></path>
            </svg>
        </a>
    {% endif %}
</div>
<div class="sidebar">
    <!-- Contenu de la barre latérale -->
</div>
<div class="content">
     <a href="{{ path('list_ongoing_reclamations') }}"> 
        <div class ="content-item">
            <div class ="content-image">
                <?xml version="1.0" encoding="utf-8"?><!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->
                    <svg width="800px" height="800px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M17.0303 8.78039L8.99993 16.8107L5.4696 13.2804L6.53026 12.2197L8.99993 14.6894L15.9696 7.71973L17.0303 8.78039Z" fill="#FFFF"/>
                    </svg>
            </div>
            <div class ="content-text">    
                <div class ="content-number" > Demandes en cours  </div>    
                <div class ="content-number" id="reclamationsCount">(loading)  </div>
            </div>        
        </div>
    </a>
       <a href="{{ path('refus_reclamations') }}"> 
        <div class ="content-item">
            <div class ="content-image" style="background:red">
                <?xml version="1.0" ?><!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->
                  <svg fill="#FFF" width="800px" height="800px" viewBox="0 0 200 200" data-name="Layer 1" id="Layer_1"
                  xmlns="http://www.w3.org/2000/svg"><title/><path d="M114,100l49-49a9.9,9.9,0,0,0-14-14L100,86,51,37A9.9,9.9,0,0,0,37,51l49,49L37,149a9.9,9.9,0,0,0,14,14l49-49,49,49a9.9,9.9,0,0,0,14-14Z"/>
                </svg>
            </div>
            <div class ="content-text">    
                <div class ="content-number" > Demandes rejeté </div>    
                <div class ="content-number" id="refusReclamationsCount">(loading)  </div>
            </div>        
        </div>
    </a>       
<a href="{{ path('factures_impayees') }}">
    <div class="content-item">
        <div class="content-image" style="background:blues">
            <!-- SVG et autres éléments d'image -->
        </div>
        <div class="content-text">
            <div class="content-number">Facture Impayée</div>
            <div class="content-number" id="factures_impayees_count">(loading)</div>
        </div>
    </div>
</a>
    

      
         
        </div>

       <div id="reclamationsDialog" style="display: none;">
    <table>
        <thead>
            <tr>
                <th>ID</th>
                <th>Nom Utilisateur</th>
                <th>Type Reclamation</th>
                <th>Branchement</th>
                <th>Commentaire</th>
            </tr>
        </thead>
        <tbody id="reclamationsTableBody">
            <!-- Reclamations will be added here dynamically -->
        </tbody>
    </table>
</div>    
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Client</h5>
            <p class="card-text">Nom prenom: {{ app.user.Nomprenom }}</p>
            <p class="card-text">Adresse: {{ app.user.Adresse }}</p>
            <p class="card-text">Numéro de téléphone: {{ app.user.Tel }}</p>
            <a href="{{ path('modifiercompte') }}" class="btn btn-modifier-compte">Modifier Compte</a>
            <a href="{{ path('createreclamation') }}" class="btn btn-modifier-compte">+Prestation</a>
        </div>
    </div>
</div>
<div style="display: flex;">
    <div style="flex: 1;"></div> {# This div will take up the remaining space on the left #}
    <div style="flex: 1; max-width: 50%;"> {# This div will take up half of the available space #}
        <table class="table">
              <form action="{{ path('fetch_contract') }}" method="post">
                    <input class="recherche_input" type="text" name="contract_number" placeholder="Numéro de contrat">
                    <button class="recherche_button" type="submit">Chercher</button>
              </form>
            <thead>
                <tr>
                    <th>Numéro Contrat</th>
                    <th>Nom et Prénom</th>
                    <th>Adresse</th>
                    <th>Action</th>
                </tr>
            </thead>
     <tbody>
            {% for contract in contractsToShow %}
                <tr>
                        <td>{{ contract.getNumContrat() }}</td>
                        <td>{{ contract.client.Nomprenom }}</td>
                        <td>{{ contract.client.Adresse }}</td>
                <td>
                        <form action="{{ path('remove_contract', {'index': loop.index0}) }}" method="post">
                            <button type="submit" class="svg-button">
                                <svg width="20px" height="20px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M10 12V17" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M14 12V17" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M4 7H20" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M6 10V18C6 19.6569 7.34315 21 9 21H15C16.6569 21 18 19.6569 18 18V10" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M9 5C9 3.89543 9.89543 3 11 3H13C14.1046 3 15 3.89543 15 5V7H9V5Z" stroke="#000000" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                </svg>
                            </button>
                        </form>
                </td>
                </tr>
            {% endfor %}
    </tbody>
</table>

      
    </div>
</div>




 




<!-- JavaScript to fetch and display ongoing reclamations -->
<script>
    // Utiliser AJAX pour récupérer le nombre de factures impayées
    fetch('{{ path('factures_impayees_count') }}')
        .then(response => response.json())
        .then(data => {
            const facturesImpayeesCount = data.factures_impayees_count;
            document.getElementById('factures_impayees_count').textContent = facturesImpayeesCount;
        })
        .catch(error => console.error('Error fetching factures impayées count:', error));
</script>
<script>
    document.addEventListener("DOMContentLoaded", function() {
        const button = document.getElementById("getOngoingReclamations");
        const reclamationsCount = document.getElementById("reclamationsCount");
        const reclamationsList = document.getElementById("reclamationsList");
        // Function to fetch and display the number of ongoing reclamations
        function fetchOngoingReclamationsCount() {
            fetch('{{ path('ongoing_reclamations_count') }}')
                .then(response => response.json())
                .then(count => {
                    reclamationsCount.textContent = count;
                })
                .catch(error => console.error('Error fetching reclamations count:', error));
        }

        // Initial fetching of the count and list of reclamations
        fetchOngoingReclamationsCount();
        fetchOngoingReclamations();

        // Add event listener to the button to refresh the reclamations list when clicked
        button.addEventListener("click", () => {
            fetchOngoingReclamations();
        });
    });
</script>
<script>
    document.addEventListener("DOMContentLoaded", function() {
        const button = document.getElementById("getRefusReclamations");
        const refusReclamationsCount = document.getElementById("refusReclamationsCount");
        const refusReclamationsList = document.getElementById("refusReclamationsList");

        // Function to fetch reclamations with "refus" state
        function fetchRefusReclamations() {
            fetch('{{ path('refus_reclamations') }}')
                .then(response => response.json())
                .then(data => {
                    refusReclamationsList.innerHTML = ''; // Clear the list before appending new reclamations
                    data.forEach(reclamation => {
                        const li = document.createElement('li');
                        li.textContent = `${reclamation.typeReclamation} - ${reclamation.branchement} - ${reclamation.commentaire}`;
                        refusReclamationsList.appendChild(li);
                    });
                })
                .catch(error => console.error('Error fetching refus reclamations:', error));
        }

        // Function to fetch and display the number of reclamations with "refus" state
        function fetchRefusReclamationsCount() {
            fetch('{{ path('refus_reclamations_count') }}')
                .then(response => response.json())
                .then(count => {
                    refusReclamationsCount.textContent = count;
                })
                .catch(error => console.error('Error fetching refus reclamations count:', error));
        }

        // Initial fetching of the count and list of reclamations with "refus" state
        fetchRefusReclamationsCount();
        fetchRefusReclamations();

        // Add event listener to the button to refresh the reclamations list when clicked
        button.addEventListener("click", () => {
            fetchRefusReclamations();
        });
    });
</script>






    <!-- Inclusion des fichiers JavaScript de Bootstrap -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.3/js/bootstrap.min.js"></script>

{% endblock %}
